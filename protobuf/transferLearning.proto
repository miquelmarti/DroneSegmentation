syntax = "proto2";

package transferLearning;

// Defines a whole transfer learning cycle
message TransferLearning {
    repeated MultiSource multi_source = 1;
}

message MultiSource {
    optional int32 iterations = 1 [default = 1];

    // For each stage (they're in a list):    
    message Stage {
        /*
          Represents a single stage of transfer learning, in which we
          initialize weights and learning rates from some pre-defined set of
          weights (or not) and learn on a new dataset.
        */
        required string name = 1;
        // Choose the type of solver used in this stage.
        required string solver_filename = 2;
    
        // Specifies layers to freeze during training, as a list
        repeated string freeze = 3;
        // Specifies layers to reinitialize with random values
        repeated string ignore = 4;
        optional bool fcn_surgery = 5 [default = false];
        optional float halt_percentage = 6;
    }

    repeated Stage stage = 2;
    enum MetricType {
        ACCURACY = 0;
        LOSS = 1;
        MEAN_IU = 2;
    }
    optional MetricType score_metric = 3 [default = MEAN_IU];
}