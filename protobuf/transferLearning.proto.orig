package transferLearning;

/*
 Represents a single stage of transfer learning, in which we initialize weights
 and learning rates from some pre-defined set of weights (or not) and learn on
 a new dataset.
*/

// FIELDS
// For each stage (they're in a list):
message Stage {
    required string name = 1;
    // TODO for later features like STS learning...is there subclassing in protobuf?
    // enum StageType {
    //     BASIC = 0;
    //     STS = 1; // Not supported yet
    // }
    // optional StageType type = 7 [default = BASIC];
    
    // The solver model used in this stage
    optional string solver = 2;
    // Specifies layers to freeze turing training, as a list
    repeated string freeze = 3;
    // Specifies layers to reinitialize with random values
    repeated string ignore = 4;
    
    // TODO the dataset used to learn in this stage
    // optional string dataset = 5;
    // TODO a partial model file to be integrated into the main file
    // optional string partialModel = 6;

    // TODO For later features like STS learning, a stage can have sub-stages
    // repeated Stage substage = 8;
}

// Defines a whole transfer learning cycle
message TransferLearning {
    repeated Stage stage = 1;
}